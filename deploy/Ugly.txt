<!DOCTYPE html>
<html>
<head>
    <title>Custom List with Deep Copy</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Wed Jun 28 2017 14:25:13 GMT-0600 (MDT) -->
    
    <script type="text/javascript">
        var APP_BUILD_DATE = "Wed Jun 28 2017 14:25:13 GMT-0600 (MDT)";
        var STORY    = "US1334";
        var BUILDER  = "corkr03";
        var CHECKSUM = 29729888997;
    </script>
    
    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns) 
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->
    
    
    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,items:[{xtype:"container",itemId:"information"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,doc:"top"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);STORY&&(a=a+"<br/>Source story: "+STORY),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:a})}}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.define("Rally.technicalservices.Toolbox",{singleton:!0,fetchPortfolioItemTypes:function(){var a=Ext.create("Deft.Deferred"),b=Ext.create("Rally.data.wsapi.Store",{model:"TypeDefinition",fetch:["TypePath","Ordinal","Name"],filters:[{property:"TypePath",operator:"contains",value:"PortfolioItem/"}],sorters:[{property:"Ordinal",direction:"ASC"}]});return b.load({callback:function(b,c,d){if(d){var e=new Array(b.length);_.each(b,function(a){var b=Number(a.get("Ordinal"));e[b]=a.get("TypePath")}),a.resolve(e)}else{var f="";c&&c.error&&c.error.errors&&(f=c.error.errors.join(",")),a.reject("Error loading Portfolio Item Types:  "+f)}}}),a.promise}}),Ext.define("Rally.technicalservices.ArtifactTree",{logger:new Rally.technicalservices.Logger,mixins:{observable:"Ext.util.Observable"},rootArtifact:void 0,modelHash:null,portfolioItemTypes:void 0,childTypesBlacklist:void 0,parentChildTypeMap:null,blacklistFields:null,stoppedByError:!1,constructor:function(a){this.blacklistFields=["Workspace","Attachments","Tags","Discussion","Milestones"],this.childTypesBlacklist=a.childTypesBlacklist||["testcase","defectsuite","defect"],this.parentChildTypeMap=this._setupParentChildMap(a.portfolioItemTypes),this.modelHash={},this.mixins.observable.constructor.call(this,a)},load:function(a,b){this.logger.log("load:",a,b),this.totalRecords=1,this.tree={},this.stoppedByError=!1,this.rootArtifact=a,this._loadModel(a)},_updateStatus:function(){this.fireEvent("statusupdate",this.completedArtifacts,this.totalArtifacts)},deepCopy:function(a){this.logger.log("..deepCopy..");var b=this;this.totalArtifacts=_.keys(this.tree).length||0,this.completedArtifacts=0,this.fireEvent("statusupdate",0,this.totalArtifacts);var c={PortfolioItem:"",Parent:""};this.logger.log("deepCopy.overrides",c),b._copyStandaloneArtifacts(c).then({success:function(){this.logger.log("deepCopy. _copyStandaloneArtifacts success"),Deft.Chain.sequence([function(){return b._copyTasks()},function(){return b._updateCollections()},function(){return b._stitchArtifacts()},function(){return b._copyAttachments()}],b).then({success:function(){this.logger.log("set parent",a&&a.get("_ref")||"No Parent");var c=b.tree[b.rootArtifact.get("ObjectID")].copyRecord,d=a&&a.get("_ref")||null;a&&d&&(a.get("_type")==this.portfolioItemTypes[0].toLowerCase()?c.set("PortfolioItem",d):c.set("Parent",d)),c.save().then({success:function(a,c){b.fireEvent("copycompleted",b.tree[b.rootArtifact.get("ObjectID")].copyRecord)},failure:function(c){b.fireEvent("copyerror",Ext.String.format("Error stitching {0} to {1}: {2}",b.rootArtifact.copyRecord.get("FormattedID"),a.get("FormattedID"),c.error.errors.join(",")))},scope:this})},failure:function(a){console.error(a),b._deleteArtifacts(),b.fireEvent("copyerror",a)},scope:b})},failure:function(a){this.logger.log("deepCopy. _copyStandaloneArtifacts failure",a)},scope:this})},_deleteArtifacts:function(){this.logger.log("_deleteArtifacts");var a=[],b=[];_.each(this.tree,function(c,d){c.copyRecord&&("task"===c.copyRecord.get("_type").toLowerCase()?a.push(c):b.push(c))});var c=[];_.each(a,function(a){c.push(function(){return this._deleteArtifact(a)})},this),_.each(b,function(a){c.push(function(){return this._deleteArtifact(a)})},this),Deft.Chain.sequence(c,this).then({success:function(){this.logger.log("artifacts deleted")},scope:this})},_deleteArtifact:function(a){var b=Ext.create("Deft.Deferred");if(a.deleted=!1,a.copyRecord){var c=a.copyRecord.get("FormattedID");a.copyRecord.destroy({callback:function(d,e){this.logger.log("artifact deleted",c,e.wasSuccessful(),d,e),e.wasSuccessful()&&(a.copyRecord=null,a.deleted=!0),b.resolve()},scope:this})}return b},_copyStandaloneArtifacts:function(a){this.logger.log("_copyStandaloneArtifacts",a);var b=[],c=Ext.create("Deft.Deferred");return _.each(this.tree,function(c,d){"task"===c.record.get("_type").toLowerCase()||c.copyRecord||b.push(function(){return this.copyArtifact(d,a)})},this),Deft.Chain.sequence(b,this).then({success:function(){c.resolve()},failure:function(a){c.reject(a)},scope:this}),c},_stitchArtifacts:function(){this.logger.log("_stitchArtifacts");var a=[],b=Ext.create("Deft.Deferred");return _.each(this.tree,function(b,c){var d=this.parentChildTypeMap[b.record.get("_type").toLowerCase()]||[],e=b.copyRecord&&b.copyRecord.get("_ref");_.each(d,function(c){var d=b[c.collectionName]||[];d.length>0&&_.each(d,function(b){this.tree[b].copyRecord&&(this.tree[b].copyRecord.set(c.parentField,e),a.push(function(){return this.tree[b].copyRecord.save()}))},this)},this)},this),this.logger.log("_stitchArtifacts",a.length),Deft.Chain.sequence(a,this).then({success:function(){this.logger.log("_stitchArtifacts success"),b.resolve()},failure:function(a){this.logger.log("_stitchArtifacts failed",a),b.reject(a)},scope:this}),b},_getNewRefs:function(a,b){var c=[];return"Predecessors"===b&&_.each(a,function(a){this.tree[a]&&this.tree[a].copyRecord&&c.push(this.tree[a].copyRecord.get("_ref"))},this),c},_updateCollections:function(){this.logger.log("_updateCollections start");var a=[],b=Ext.create("Deft.Deferred"),c=["Predecessors","Tags"];return _.each(this.tree,function(b,d){_.each(c,function(c){b[c]&&b[c].length>0&&("Predecessors"===c?a.push(function(){var a=this._getNewRefs(b[c],c);return this._updateCollection(b.copyRecord,c,a)}):"Tags"===c&&a.push(function(){var a=b[c];return this._updateCollection(b.copyRecord,c,a)}))},this)}),this.logger.log("_updateCollections promises",a.length),Deft.Chain.sequence(a,this).then({success:function(){this.logger.log("_updateCollections success"),b.resolve()},failure:function(a){this.logger.log("_updateCollections failed",a),b.reject(a)},scope:this}),b},_updateCollection:function(a,b,c){this.logger.log("_updateCollection",b,a,c);var d=this,e=Ext.create("Deft.Deferred"),f=a.getCollection(b);return f.load({callback:function(){d.logger.log("_updateCollection after store load"),0===c.length&&e.resolve(),Ext.Array.each(c,function(a){f.add(a)}),f.sync({callback:function(){d.logger.log("_updateCollection after store sync"),e.resolve()}})}}),e.promise},_updateArtifact:function(a){var b=Ext.create("Deft.Deferred");return this.logger.log("updateArtifact"),a.save({callback:function(c,d){d.wasSuccessful()?b.resolve():b.reject("Update for "+a.get("FormattedID")+" failed: "+d.error.errors.join(","))}}),b},_copyTasks:function(){this.logger.log("_copyTasks");var a=this,b=[],c=Ext.create("Deft.Deferred");return _.each(this.tree,function(c,d){if("task"===c.record.get("_type").toLowerCase()){var e=a._getTaskParentRef(d);e&&b.push(function(){return a.copyArtifact(d,{WorkProduct:e})})}},this),Deft.Chain.sequence(b,this).then({success:function(){this.logger.log("_copyTasks success"),c.resolve()},failure:function(a){this.logger.log("_copyTasks fail",a),c.reject(a)},scope:this}),c},_copyAttachments:function(a,b){this.logger.log("_copyAttachments");var c=this,d=[],e=Ext.create("Deft.Deferred");return _.each(this.tree,function(a,b){var e=a.Attachments,f=a.copyRecord;f?Ext.Array.each(e,function(a){d.push(function(){return c.copyAttachment(a,f)})}):c.logger.log("_copyAttachments no copy record",a)},this),Deft.Chain.sequence(d,this).then({success:function(){c.logger.log("_copyAttachments resolve"),e.resolve()},failure:function(a){e.reject(a)},scope:this}),e},_getTaskParentRef:function(a){var b=null;return _.each(this.tree,function(c,d){var e=c&&c.Tasks||[];return Ext.Array.contains(e,Number(a))?(b=c.copyRecord&&c.copyRecord.get("ObjectID")||null,!1):void 0}),b},copyArtifact:function(a,b){var c=Ext.create("Deft.Deferred"),d=this.tree[a].record;return this.logger.log("copyArtifact",d.get("FormattedID")),this._fetchModel(d.get("_type")).then({success:function(e){var f=this.getFieldsToCopy(d,b);Ext.create(e,f).save({callback:function(b,e){this.logger.log("copyArtifact callback",d.get("FormattedID"),e.wasSuccessful(),b,e),e.wasSuccessful()?(this.tree[a].copyRecord=b,this.completedArtifacts++,this._updateStatus(),c.resolve()):(this.tree[a].copyRecord=null,this.tree[a].error=e.error.errors.join(","),c.reject(e.error.errors.join(",")))},scope:this})},failure:function(a){c.reject(a)},scope:this}),c},copyAttachment:function(a,b){this.logger.log("copyAttachment",a,b);var c=Ext.create("Deft.Deferred"),d=this;return Deft.Chain.sequence([function(){return d._fetchModel("Attachment")},function(){return d._fetchModel("AttachmentContent")}]).then({success:function(d){var e=d[0],f=d[1];e.load(a,{fetch:["ObjectID","Content","ContentType","Description","Name","Size","Summary"],callback:function(a,d){if(d.wasSuccessful()){var g=a.get("Content").ObjectID;f.load(g,{fetch:["Content"],callback:function(d,g){if(g.wasSuccessful()){var h=d.get("Content");Ext.create(f,{Content:h}).save({callback:function(d,f){f.wasSuccessful()?Ext.create(e,{Artifact:b.get("_ref"),Content:d.get("_ref"),ContentType:a.get("ContentType"),Name:a.get("Name"),Description:a.get("Description"),Size:a.get("Size"),Summary:a.get("Summary")}).save({callback:function(b,d){d.wasSuccessful()?(console.log("Saved attachment: ",a.get("Name")),c.resolve()):c.reject(d.error.errors.join(","))}}):c.reject(f.error.errors.join(","))}})}else c.reject(g.error.errors.join(","))}})}else c.reject(d.error.errors.join(","))}})},failure:function(a){c.reject(a)},scope:this}),c},getFieldsToCopy:function(a,b){var c=a.getFields(),d=_.filter(c,this._fieldIsCopyable,this),e={};return _.each(d,function(c){if("COLLECTION"!==c.attributeDefinition.AttributeType){var d=a.get(c.name);d&&Ext.isObject(d)&&(d=d._ref),_.has(b,c.name)&&(d=b[c.name]),d&&(e[c.name]=d)}},this),e},_fieldIsCopyable:function(a){return Ext.Array.contains(this.blacklistFields,a.name)?!1:a.hidden||a.readOnly?!1:a.attributeDefinition?!0:!1},_loadModel:function(a){this._fetchModel(a.get("_type")).then({success:function(b){this.logger.log("_loadModel success"),this._loadArtifact(b,a)},failure:function(b){this.tree[a.get("ObjectID")].error=b,this._checkForDoneness(b)},scope:this})},_loadArtifact:function(a,b){if(this.logger.log("_loadArtifact",b),!this.stoppedByError){var c=b.get("ObjectID");a.load(c,{fetch:!0,scope:this,callback:function(a,d){if(d.wasSuccessful())this.logger.log("_loadArtifact success",c,a),this.tree[c]=this.getTreeNode(a),this._loadArtifactCollections(a);else{this.logger.log("_loadArtifact failure",c,d);var e=Ext.String.format("Failed to load {0}/{1} with error: {2} ",b.get("_type"),b.get("ObjectID"),d.error.errors.join(","));this.tree[c].error=e,this._checkForDoneness(e)}}})}},getTreeNode:function(a){return{record:a,error:null,childCount:{}}},_loadArtifactCollections:function(a){var b=["Predecessors","Tags","Attachments"],c=[];_.each(b,function(b){a.get(b)&&a.get(b).Count&&a.get(b).Count>0&&c.push(function(){return this._loadCollection(a,b,!1,"Tags"===b)})},this),c.length>0?Deft.Chain.sequence(c,this).then({success:function(){this.logger.log("artifact collections loaded",a),this._loadArtifactChildren(a)},failure:function(a){this.logger.log("failure loading artifact collections",a)},scope:this}):this._loadArtifactChildren(a)},_loadArtifactChildren:function(a){if(!this.stoppedByError){var b=this.parentChildTypeMap[a.get("_type").toLowerCase()],c=0;b=_.filter(b,function(a){return Ext.Array.contains(this.childTypesBlacklist,a.typePath)?void 0:!0},this),this.logger.log("_loadArtifactChildren",b,this.parentChildTypeMap,a.get("_type").toLowerCase()),_.each(b,function(b){this.logger.log("_loadArtifactChildren child",b,a.get(b.collectionName).Count),a.get(b.collectionName).Count>0&&(this.totalRecords=this.totalRecords+a.get(b.collectionName).Count,this._loadCollection(a,b.collectionName,!0))},this),0===c&&this._checkForDoneness()}},_checkForDoneness:function(a){return this.logger.log("_checkForDoneness",this.tree,this.totalRecords,_.keys(this.tree).length,a),a?(this.stoppedByError=!0,void this.fireEvent("error",a)):void(this.tree&&_.keys(this.tree).length===this.totalRecords&&(this.logger.log("TREE LOADED!"),this.fireEvent("treeloaded",this)))},_loadCollection:function(a,b,c,d){var e=Ext.create("Deft.Deferred"),f=a.get("ObjectID");this.tree[f][b]=[];var g=[];return Ext.Array.contains(["Tags","Attachments"],b)||(g=[{property:"Project.State",value:"Open"}]),a.getCollection(b).load({fetch:["ObjectID"],filters:g,callback:function(g,h,i){if(this.logger.log("_loadCollection callback",b,g,i),i)_.each(g,function(a){var e=a.get("ObjectID");d&&(e=a.get("_ref")),this.tree[f][b].push(e),c&&this._loadModel(a)},this),e.resolve();else{var j=Ext.String.format("Failed to load collecton for {0}/{1} with error: {2} ",a.get("_type"),a.get("ObjectID"),h.error.errors.join(","));this.tree[f].error=j,this._checkForDoneness(j),e.reject(j)}},scope:this}),e},_fetchModel:function(a){var b=Ext.create("Deft.Deferred");return this.modelHash[a]?b.resolve(this.modelHash[a]):Rally.data.ModelFactory.getModel({type:a,success:function(c){this.modelHash[a]=c,b.resolve(c)},failure:function(){var c="Failed to load model: "+a;this._checkForDoneness(c),b.reject(c)},scope:this}),b},_setupParentChildMap:function(a){var b={hierarchicalrequirement:[{typePath:"defect",collectionName:"Defects",parentField:"Requirement"},{typePath:"task",collectionName:"Tasks",parentField:"WorkProduct"},{typePath:"testcase",collectionName:"TestCases",parentField:"WorkProduct"},{typePath:"hierarchicalrequirement",collectionName:"Children",parentField:"Parent"}],defect:[{typePath:"task",collectionName:"Tasks",parentField:"WorkProduct"},{typePath:"testcase",collectionName:"TestCases",parentField:"WorkProduct"}],defectsuite:[{typePath:"defect",collectionName:"Defects",parentField:"DefectSuites"},{typePath:"task",collectionName:"Tasks",parentField:"WorkProduct"},{typePath:"testcase",collectionName:"TestCases",parentField:"WorkProduct"}],testset:[{typePath:"task",collectionName:"Tasks",parentField:"WorkProduct"},{typePath:"testcase",collectionName:"TestCases",parentField:"TestSets"}]};if(a&&a.length>0){b[a[0].toLowerCase()]=[{typePath:"hierarchicalrequirement",collectionName:"UserStories",parentField:"PortfolioItem"}];for(var c=1;c<a.length;c++)b[a[c].toLowerCase()]=[{typePath:a[c-1],collectionName:"Children",parentField:"Parent"}]}return b}}),Ext.define("Rally.ui.menu.bulk.DeepCopyBase",{alias:"widget.rallyrecordmenuitembulkdeepcopybase",extend:"Rally.ui.menu.bulk.MenuItem",mixins:{messageable:"Rally.Messageable"},config:{onBeforeAction:function(){},onActionComplete:function(){}},_copyRecord:function(a,b){var c=Ext.create("Deft.Deferred"),d=a.get("FormattedID"),e=this;this.fireEvent("loadtree"),e.publish("maskUpdate","Retrieving Data...");var f=Ext.create("Rally.technicalservices.ArtifactTree",{portfolioItemTypes:this.portfolioItemTypes,listeners:{treeloaded:function(a){e.publish("maskUpdate","Copying Data..."),a.deepCopy(b)},copycompleted:function(b){e.publish("maskUpdate"),c.resolve({record:a})},copyerror:function(b){e.publish("maskUpdate"),c.resolve({record:a,errorMessage:b})},statusupdate:function(a,b){var c=10,f=!1;50>b&&(c=5),10>b&&(c=2),4>b&&(c=1);var f=a%c===0&&a>0&&a!==b;if(f){var g=Ext.String.format("{0}: {1} of {2} Artifacts copied...",d,a,b);e.publish("statusUpdate",g)}a===b&&e.publish("statusUpdate","Stitching artifacts...")},scope:this}});return f.load(a,a.get("Parent")),c},copyRecords:function(a,b){var c=[],d=[],e=[];_.each(a,function(a){c.push(function(){return this._copyRecord(a,b)})},this),Deft.Chain.sequence(c,this).then({success:function(a){var c="";_.each(a,function(a){a.errorMessage?(c=a.errorMessage,e.push(a.record)):d.push(a.record)}),this.onSuccess(d,e,{parent:b},c)},failure:function(a){this.onSuccess([],[],{parent:b},a)},scope:this})},onSuccess:function(a,b,c,d){var e=c&&c.parent&&c.parent.get("FormattedID")||null,f=a.length+(1===a.length?" item has ":" items have ");a.length===this.records.length?(f+=" been deep copied",e&&(f+=" to "+e),this.publish("copyComplete",f)):(0===a.length&&(f="0 items have been deep copied"),this.publish("copyError",f+", but "+b.length+" failed: "+d)),Ext.callback(this.onActionComplete,null,[a,b])}}),Ext.define("Rally.ui.menu.bulk.DeepCopy",{alias:"widget.rallyrecordmenuitembulkdeepcopy",extend:"Rally.ui.menu.bulk.DeepCopyBase",config:{text:"Deep Copy",handler:function(){this.copyRecords(this.records,null)},predicate:function(a){return _.every(a,function(a){var b=a.get("_type").toLowerCase();return"hierarchicalrequirement"===b||/portfolioitem/.test(b)})}}}),Ext.define("Rally.ui.menu.bulk.DeepCopyTo",{alias:"widget.rallyrecordmenuitembulkdeepcopyto",extend:"Rally.ui.menu.bulk.DeepCopyBase",config:{text:"Deep Copy to...",handler:function(){this._onBulkCopyToParentClicked()},predicate:function(a){var b=this.portfolioItemTypes.slice(-1)[0].toLowerCase(),c=a&&a[0].get("_type");return _.every(a,function(a){var d=a.get("_type").toLowerCase();return d==c&&d!==b})}},_onBulkCopyToParentClicked:function(){var a=this.records,b=this,c=a&&a[0].get("_type").toLowerCase(),d=null;if("hierarchicalrequirement"===c)d=this.portfolioItemTypes[0];else for(var e=0;e<this.portfolioItemTypes.length;e++)c===this.portfolioItemTypes[e].toLowerCase()&&e<this.portfolioItemTypes.length-1&&(d=this.portfolioItemTypes[e+1],e=this.portfolioItemTypes.length);d?Ext.create("Rally.ui.dialog.ArtifactChooserDialog",{artifactTypes:[d.toLowerCase()],autoShow:!0,height:250,title:"Choose Parent to copy to",storeConfig:{context:{project:null,workspace:Rally.util.Ref.getRelativeUri(this.getContext().getWorkspace())},fetch:["FormattedID","Name","Project"],filters:[{property:"Project.State",value:"Open"}]},columns:[{text:"ID",dataIndex:"FormattedID",renderer:_.identity},"Name","Project"],listeners:{artifactchosen:function(c,d){b.copyRecords(a,d)},scope:b}}):Rally.ui.notify.Notifier.showError({message:"No Parent Type found for "+c+';  Use the "Deep Copy..." menu item instead.'})}}),Ext.define("custom-list-with-deep-copy",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},items:[{xtype:"container",itemId:"message_box",tpl:"Hello, <tpl>{_refObjectName}</tpl>"},{xtype:"container",itemId:"display_box"}],integrationHeaders:{name:"custom-list-with-deep-copy"},config:{defaultSettings:{rootModelTypePath:"HierarchicalRequirement",query:null}},launch:function(){Rally.technicalservices.Toolbox.fetchPortfolioItemTypes().then({success:this.initializeApp,failure:this.showErrorNotification,scope:this}),this.subscribe(this,"statusUpdate",this.statusUpdate,this),this.subscribe(this,"maskUpdate",this.maskUpdate,this),this.subscribe(this,"copyComplete",this.copyComplete,this),this.subscribe(this,"copyError",this.copyError,this)},maskUpdate:function(a){a&&""!==a||(a=!1),this.setLoading(a),this.refresh()},initializeApp:function(a){this.portfolioItemTypePaths=a,this.buildTreeStore()},getQueryFilter:function(){return this.getSetting("query")?Rally.data.wsapi.Filter.fromQueryString(this.getSetting("query")):[]},buildTreeStore:function(){this.down("#display_box").removeAll(),Ext.create("Rally.data.wsapi.TreeStoreBuilder").build({models:[this.getRootModelTypePath()],enableHierarchy:!0,filters:this.getQueryFilter()}).then({success:this.buildGridboard,scope:this})},buildGridboard:function(a){this.down("rallygridboard")&&this.down("rallygridboard").destroy();var b=this.getTypesToCopy();this.add({xtype:"rallygridboard",context:this.getContext(),modelNames:this.getRootModelTypePath(),toggleState:"grid",gridConfig:{store:a,storeConfig:{pageSize:200,filters:this.getQueryFilter()},columnCfgs:["Name","Project"],bulkEditConfig:{items:[{xtype:"rallyrecordmenuitembulkdeepcopyto",portfolioItemTypes:this.getPortfolioItemTypePaths(),typesToCopy:b},{xtype:"rallyrecordmenuitembulkdeepcopy",portfolioItemTypes:this.getPortfolioItemTypePaths(),typesToCopy:b}]}},plugins:this.getPlugins(),height:this.getHeight()})},getPlugins:function(){return[{ptype:"rallygridboardfieldpicker",headerPosition:"left",modelNames:this.getTypesToCopy(),stateful:!0,stateId:this.getContext().getScopedStateId("deep-copy-columns")},{ptype:"rallygridboardinlinefiltercontrol",inlineFilterButtonConfig:{stateful:!0,stateId:this.getContext().getScopedStateId("deep-copy-filter"),modelNames:[this.getRootModelTypePath()],inlineFilterPanelConfig:{collapsed:!1,quickFilterPanelConfig:{defaultFields:["ArtifactSearch","Owner"]}}}}]},statusUpdate:function(a){Rally.ui.notify.Notifier.hide(),Rally.ui.notify.Notifier.show({message:a,showForever:!0})},copyComplete:function(a){this.setLoading(!1),Rally.ui.notify.Notifier.hide(),Rally.ui.notify.Notifier.show({message:a,duration:5e3})},copyError:function(a){this.setLoading(!1),Rally.ui.notify.Notifier.hide(),Rally.ui.notify.Notifier.showError({message:a,duration:1e4,saveDelay:500})},getTypesToCopy:function(){var a=["hierarchicalrequirement","task"],b=this.getRootModelTypePath();return/PortfolioItem\//.test(b)&&Ext.Array.each(this.getPortfolioItemTypePaths(),function(c){return a.unshift(c),c!==b}),a},getPortfolioItemTypePaths:function(){return this.portfolioItemTypePaths},getRootModelTypePath:function(){return this.getSetting("rootModelTypePath")},getCopyToParentTypePath:function(){var a=0;return/PortfolioItem\//.test(this.getRootModelTypePath())&&(a=_.indexOf(this.getPortfolioItemTypePaths(),this.getRootModelTypePath())+1),this.getPortfolioItemTypePaths().length>a?this.getPortfolioItemTypePaths()[a]:null},showErrorNotification:function(a){Rally.ui.notify.Notifier.showError({message:a})},getSettingsFields:function(){var a=[{property:"TypePath",operator:"contains",value:"PortfolioItem/"},{property:"TypePath",value:"HierarchicalRequirement"}];return a=Rally.data.wsapi.Filter.or(a),[{xtype:"rallycombobox",name:"rootModelTypePath",storeConfig:{model:"TypeDefinition",fetch:["TypePath","DisplayName"],filters:a,remoteFilter:!0},displayField:"DisplayName",valueField:"TypePath",fieldLabel:"Artifact Type",labelAlign:"right"},{type:"query"}]},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()}});
            
               Rally.launchApp('custom-list-with-deep-copy', {
                   name: 'Custom List with Deep Copy'
               });
        });
    </script>
    
    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}
    </style>

</head>
<body></body>
</html>